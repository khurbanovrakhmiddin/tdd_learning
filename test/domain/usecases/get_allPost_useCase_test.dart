import 'package:dartz/dartz.dart';import 'package:flutter_test/flutter_test.dart';import 'package:mockito/annotations.dart';import 'package:mockito/mockito.dart';import 'package:tdd_learning/domain/entities/post_entityes.dart';import 'package:tdd_learning/domain/repositories/post_base_repository.dart';import 'package:tdd_learning/domain/usecases/get_all_post_usecase.dart';import 'package:tdd_learning/domain/usecases/usecase.dart';import 'get_allPost_useCase_test.mocks.dart';class PostBaseRepositoryTest extends Mock implements    PostBaseRepository {}@GenerateMocks([PostBaseRepositoryTest])void main(){  late MockPostBaseRepositoryTest mokckRepostitory; late GetAllPostUseCase useCase;setUp(() {  mokckRepostitory = MockPostBaseRepositoryTest();  useCase = GetAllPostUseCase(repository: mokckRepostitory);});final postList = [Post(title: 'asdasdasd', body: 'asdasd', id: '2',    userId: 3)];test('description', ()async {  when(mokckRepostitory.getAllPost()).thenAnswer((realInvocation)      async=> Right(postList) );  final result = await useCase(NoParams());  expect(result, Right(postList));  verify(mokckRepostitory.getAllPost());  verifyNoMoreInteractions(mokckRepostitory);});}